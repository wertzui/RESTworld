{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Repos\\\\wertzui\\\\RESTworld\\\\src\\\\Example\\\\ExampleBlog\\\\ExampleBlog.Client.Angular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as _ from 'lodash';\nimport { ConfirmationService, FilterMatchMode, MessageService } from 'primeng/api';\nimport { RESTworldClientCollection } from '../../services/restworld-client-collection';\nimport { ProblemDetails } from '../../models/problem-details';\nimport { AvatarGenerator } from '../../services/avatar-generator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/restworld-client-collection\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"../../services/avatar-generator\";\nimport * as i4 from \"primeng/table\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"primeng/tooltip\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"primeng/button\";\nimport * as i9 from \"primeng/avatar\";\nimport * as i10 from \"primeng/tristatecheckbox\";\nimport * as i11 from \"@angular/forms\";\nimport * as i12 from \"primeng/toast\";\nimport * as i13 from \"primeng/confirmdialog\";\n\nfunction RESTworldListViewComponent_ng_template_1_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 8)(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"p-sortIcon\", 10)(4, \"p-columnFilter\", 11);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const col_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"pSortableColumn\", col_r5.field);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", col_r5.header, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"field\", col_r5.field);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", col_r5.type)(\"field\", col_r5.field);\n  }\n}\n\nconst _c0 = function (a1, a2) {\n  return [\"/edit\", a1, a2];\n};\n\nfunction RESTworldListViewComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_1_th_1_Template, 5, 5, \"th\", 4);\n    i0.ɵɵelementStart(2, \"th\")(3, \"div\", 5)(4, \"div\", 6);\n    i0.ɵɵelement(5, \"a\", 7);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const columns_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r3);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(2, _c0, ctx_r0.apiName, ctx_r0.newHref));\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_p_avatar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p-avatar\", 22);\n  }\n\n  if (rf & 2) {\n    const col_r10 = i0.ɵɵnextContext(2).$implicit;\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(ctx_r15.avatarGenerator.getStyle(entity_r6[col_r10.field]));\n    i0.ɵɵproperty(\"pTooltip\", entity_r6[col_r10.field])(\"image\", ctx_r15.avatarGenerator.getImage(entity_r6[col_r10.field]))(\"label\", ctx_r15.avatarGenerator.getLabel(entity_r6[col_r10.field]));\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r10 = i0.ɵɵnextContext(2).$implicit;\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(entity_r6[col_r10.field]);\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_p_avatar_1_Template, 1, 5, \"p-avatar\", 20);\n    i0.ɵɵtemplate(2, RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_span_2_Template, 2, 1, \"span\", 21);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const col_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", col_r10.field === \"createdBy\" || col_r10.field === \"lastChangedBy\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", col_r10.field !== \"createdBy\" && col_r10.field !== \"lastChangedBy\");\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r10 = i0.ɵɵnextContext().$implicit;\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(entity_r6[col_r10.field]);\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 23)(1, \"p-triStateCheckbox\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function RESTworldListViewComponent_ng_template_2_td_1_span_3_Template_p_triStateCheckbox_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r26);\n      const col_r10 = i0.ɵɵnextContext().$implicit;\n      const entity_r6 = i0.ɵɵnextContext().$implicit;\n      return entity_r6[col_r10.field] = $event;\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const col_r10 = i0.ɵɵnextContext().$implicit;\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", entity_r6[col_r10.field])(\"readonly\", true);\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r10 = i0.ɵɵnextContext().$implicit;\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"pTooltip\", entity_r6[col_r10.field]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 2, entity_r6[col_r10.field], ctx_r14.dateFormat));\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 15);\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_Template, 3, 2, \"ng-container\", 16);\n    i0.ɵɵtemplate(2, RESTworldListViewComponent_ng_template_2_td_1_span_2_Template, 2, 1, \"span\", 17);\n    i0.ɵɵtemplate(3, RESTworldListViewComponent_ng_template_2_td_1_span_3_Template, 2, 2, \"span\", 18);\n    i0.ɵɵtemplate(4, RESTworldListViewComponent_ng_template_2_td_1_span_4_Template, 3, 5, \"span\", 19);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const col_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngSwitch\", col_r10.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_2_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function RESTworldListViewComponent_ng_template_2_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const entity_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.showDeleteConfirmatioModal(entity_r6);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c1 = function (a0, a1, a2) {\n  return [a0, a1, a2];\n};\n\nfunction RESTworldListViewComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_2_td_1_Template, 5, 5, \"td\", 12);\n    i0.ɵɵelementStart(2, \"td\")(3, \"div\", 5);\n    i0.ɵɵelement(4, \"a\", 13);\n    i0.ɵɵtemplate(5, RESTworldListViewComponent_ng_template_2_button_5_Template, 1, 0, \"button\", 14);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const entity_r6 = ctx.$implicit;\n    const columns_r7 = ctx.columns;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", columns_r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction3(3, _c1, ctx_r1.editLink, ctx_r1.apiName, entity_r6._links == null ? null : entity_r6._links.self[0].href));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", entity_r6._links.delete);\n  }\n}\n\nfunction RESTworldListViewComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 27);\n    i0.ɵɵtext(2, \"No entries found.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport var ColumnType;\n\n(function (ColumnType) {\n  ColumnType[\"text\"] = \"text\";\n  ColumnType[\"numeric\"] = \"numeric\";\n  ColumnType[\"boolean\"] = \"boolean\";\n  ColumnType[\"date\"] = \"date\";\n})(ColumnType || (ColumnType = {}));\n\nexport class RESTworldListViewComponent {\n  constructor(_clients, _confirmationService, _messageService, avatarGenerator) {\n    this._clients = _clients;\n    this._confirmationService = _confirmationService;\n    this._messageService = _messageService;\n    this.avatarGenerator = avatarGenerator;\n    this._columns = [];\n    this._editLink = '/edit';\n    this.isLoading = false;\n    this._totalRecords = 0;\n    this.rowsPerPage = [10, 25, 50];\n    this._lastEvent = {\n      rows: this.rowsPerPage[0]\n    };\n  }\n\n  get columns() {\n    return this._columns;\n  }\n\n  set editLink(value) {\n    if (value) this._editLink = value;\n  }\n\n  get editLink() {\n    return this._editLink;\n  }\n\n  set apiName(value) {\n    this._apiName = value;\n    if (this.apiName && this.rel && this._lastEvent) this.load(this._lastEvent);\n  }\n\n  get apiName() {\n    return this._apiName;\n  }\n\n  set rel(value) {\n    this._rel = value;\n    if (this.apiName && this.rel && this._lastEvent) this.load(this._lastEvent);\n  }\n\n  get rel() {\n    return this._rel;\n  }\n\n  get value() {\n    return this.resource?._embedded?.items || [];\n  }\n\n  get rows() {\n    return this._lastEvent?.rows || 0;\n  }\n\n  get totalRecords() {\n    return this._totalRecords;\n  }\n\n  set totalRecords(value) {\n    this._totalRecords = value || 0;\n  }\n\n  get sortOrder() {\n    return this._lastEvent.sortOrder || 0;\n  }\n\n  get newHref() {\n    return this.resource?.findLink('new')?.href;\n  }\n\n  get dateFormat() {\n    return RESTworldListViewComponent._dateFormat;\n  }\n\n  getClient() {\n    if (!this.apiName) throw new Error('Cannot get a client, because the apiName is not set.');\n    return this._clients.getClient(this.apiName);\n  }\n\n  load(event) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this.apiName || !_this.rel) return;\n      _this.isLoading = true;\n      _this._lastEvent = event;\n\n      const parameters = _this.createParametersFromEvent(event);\n\n      const response = yield _this.getClient().getList(_this.rel, parameters);\n\n      if (!response.ok || ProblemDetails.isProblemDetails(response.body) || !response.body) {\n        _this._messageService.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Error while loading the resources from the API.',\n          data: response\n        });\n      } else if (response.body) {\n        _this.resource = response.body;\n        _this.totalRecords = _this.resource.totalPages && parameters.$top ? _this.resource.totalPages * parameters.$top : undefined;\n        _this._columns = _this.createColumns();\n      }\n\n      _this.isLoading = false;\n    })();\n  }\n\n  showDeleteConfirmatioModal(resource) {\n    this._confirmationService.confirm({\n      message: 'Do you really want to delete this resource?',\n      header: 'Confirm delete',\n      icon: 'far fa-trash-alt',\n      accept: () => this.delete(resource)\n    });\n  }\n\n  delete(resource) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this2.apiName || !_this2.rel) return;\n      yield _this2.getClient().delete(resource);\n\n      _this2._messageService.add({\n        severity: 'success',\n        summary: 'Deleted',\n        detail: 'The resource has been deleted.'\n      });\n\n      _this2.load(_this2._lastEvent);\n    })();\n  }\n\n  createColumns() {\n    if (this.value.length === 0) return this.columns; // Get all distinct properties from all rows\n    // We look at all rows to eliminate possible undefined values\n\n    const rowsWithProperties = this.value.map(resource => Object.entries(resource).filter(p => p[0] !== '_links' && p[0] !== '_embedded' && p[0] !== 'id' && p[0] !== 'timestamp'));\n    const distinctProperties = rowsWithProperties[0];\n\n    for (const propertiesOfRow of rowsWithProperties) {\n      for (const property of propertiesOfRow) {\n        const propertyName = property[0];\n        const propertyValue = property[1];\n        const alreadyFoundPropertyWithSameName = distinctProperties.find(p => p[0] === propertyName);\n        if (!alreadyFoundPropertyWithSameName) // Add new property\n          distinctProperties.push(property);else if (!alreadyFoundPropertyWithSameName[1] && propertyValue) // Use defined value instead of existing undefined value\n          alreadyFoundPropertyWithSameName[1] = propertyValue;\n      }\n    } // Check if the rows are entities with change tracking\n\n\n    const withoutChangeTrackingProperties = distinctProperties.filter(p => p[0] !== 'createdAt' && p[0] !== 'createdBy' && p[0] !== 'lastChangedAt' && p[0] !== 'lastChangedBy');\n    const hasChangeTrackingProperties = withoutChangeTrackingProperties.length < distinctProperties.length; // First the id, then all other properties\n\n    const sortedProperties = [['id', 0], ...withoutChangeTrackingProperties]; // And change tracking properties at the end\n\n    if (hasChangeTrackingProperties) {\n      sortedProperties.push(['createdAt', new Date()]);\n      sortedProperties.push(['createdBy', '']);\n      sortedProperties.push(['lastChangedAt', new Date()]);\n      sortedProperties.push(['lastChangedBy', '']);\n    }\n\n    const columns = sortedProperties.map(p => ({\n      header: RESTworldListViewComponent.toTitleCase(p[0]),\n      field: p[0],\n      type: RESTworldListViewComponent.getColumnType(p[1])\n    }));\n    return columns;\n  }\n\n  static getColumnType(value) {\n    if (value === null || value === undefined) return ColumnType.text;\n    if (_.isNumber(value)) return ColumnType.numeric;\n    if (_.isDate(value)) return ColumnType.date;\n    if (_.isString(value)) return ColumnType.text;\n    if (_.isBoolean(value)) return ColumnType.boolean;\n    return ColumnType.text;\n  }\n\n  static toTitleCase(anyCase) {\n    return anyCase.replace(/(_)+/g, ' ') // underscore to whitespace\n    .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\") // insert space before each new word if there is none\n    .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\") // insert space after each word if there is none\n    .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\") // insert space after single letter word if there is none\n    .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\") // insert space before single letter word if there is none\n    .replace(/([a-z]+)([A-Z0-9]+)/g, \"$1 $2\") // insert space after numbers\n    .replace(/^./, match => match.toUpperCase()); // change first letter to be upper case\n  }\n\n  createParametersFromEvent(event) {\n    const oDataParameters = {\n      $filter: this.createFilterFromEvent(event),\n      $orderby: RESTworldListViewComponent.createOrderByFromEvent(event),\n      $top: RESTworldListViewComponent.createTopFromEvent(event),\n      $skip: RESTworldListViewComponent.createSkipFromEvent(event)\n    };\n    return oDataParameters;\n  }\n\n  static createSkipFromEvent(event) {\n    return event.first;\n  }\n\n  static createTopFromEvent(event) {\n    return event.rows;\n  }\n\n  static createOrderByFromEvent(event) {\n    if (event.sortField) {\n      const order = !event.sortOrder || event.sortOrder > 0 ? 'asc' : 'desc';\n      return `${event.sortField} ${order}`;\n    }\n\n    return undefined;\n  }\n\n  createFilterFromEvent(event) {\n    if (!event.filters) return undefined;\n    const filter = Object.entries(event.filters) // The type definition is wrong, event.filters has values of type FilterMetadata[] and not FilterMetadata.\n    .map(([property, filter]) => ({\n      property: property,\n      filters: filter\n    })).map(f => this.createFilterForPropertyArray(f.property, f.filters)).filter(f => !!f).join(' and ');\n    if (filter === '') return undefined;\n    return `(${filter})`;\n  }\n\n  createFilterForPropertyArray(property, filters) {\n    const filter = filters.map(f => this.createFilterForProperty(property, f)).filter(f => !!f).join(` ${filters[0].operator} `);\n    if (filter === '') return undefined;\n    return `(${filter})`;\n  }\n\n  createFilterForProperty(property, filter) {\n    if (!filter.value) return undefined;\n    const oDataOperator = RESTworldListViewComponent.createODataOperator(filter.matchMode);\n    const comparisonValue = this.createComparisonValue(property, filter.value);\n\n    switch (oDataOperator) {\n      case 'contains':\n      case 'not contains':\n      case 'startswith':\n      case 'endswith':\n        return `${oDataOperator}(${property}, ${comparisonValue})`;\n\n      default:\n        return `${property} ${oDataOperator} ${comparisonValue}`;\n    }\n  }\n\n  static createODataOperator(matchMode) {\n    switch (matchMode) {\n      case FilterMatchMode.STARTS_WITH:\n        return 'startswith';\n\n      case FilterMatchMode.CONTAINS:\n        return 'contains';\n\n      case FilterMatchMode.NOT_CONTAINS:\n        return 'not contains';\n\n      case FilterMatchMode.ENDS_WITH:\n        return 'endswith';\n\n      case FilterMatchMode.EQUALS:\n        return 'eq';\n\n      case FilterMatchMode.NOT_EQUALS:\n        return 'ne';\n\n      case FilterMatchMode.IN:\n        return 'in';\n\n      case FilterMatchMode.LESS_THAN:\n        return 'lt';\n\n      case FilterMatchMode.LESS_THAN_OR_EQUAL_TO:\n        return 'le';\n\n      case FilterMatchMode.GREATER_THAN:\n        return 'gt';\n\n      case FilterMatchMode.GREATER_THAN_OR_EQUAL_TO:\n        return 'ge';\n\n      case FilterMatchMode.IS:\n        return 'eq';\n\n      case FilterMatchMode.IS_NOT:\n        return 'ne';\n\n      case FilterMatchMode.BEFORE:\n        return 'lt';\n\n      case FilterMatchMode.AFTER:\n        return 'gt';\n\n      case FilterMatchMode.DATE_AFTER:\n        return 'ge';\n\n      case FilterMatchMode.DATE_BEFORE:\n        return 'lt';\n\n      case FilterMatchMode.DATE_IS:\n        return 'eq';\n\n      case FilterMatchMode.DATE_IS_NOT:\n        return 'ne';\n\n      default:\n        throw Error(`Unknown matchMode ${matchMode}`);\n    }\n  }\n\n  createComparisonValue(property, value) {\n    if (value === null || value === undefined) return 'null';\n    const columns = this.columns.filter(c => c.field === property);\n    if (columns.length !== 1) throw new Error(`Cannot find the column for the property ${property} which is specified in the filter.`);\n    const type = columns[0].type;\n\n    switch (type) {\n      case ColumnType.boolean:\n        return `${value}`;\n\n      case ColumnType.date:\n        return `cast(${value.toISOString()}, Edm.DateTimeOffset)`;\n\n      case ColumnType.numeric:\n        return `${value}`;\n\n      case ColumnType.text:\n        return `'${value}'`;\n\n      default:\n        throw new Error(`Unknown column type '${type}'`);\n    }\n  }\n\n}\nRESTworldListViewComponent._dateFormat = new Date(3333, 10, 22).toLocaleDateString().replace(\"22\", \"dd\").replace(\"11\", \"MM\").replace(\"3333\", \"y\").replace(\"33\", \"yy\");\n\nRESTworldListViewComponent.ɵfac = function RESTworldListViewComponent_Factory(t) {\n  return new (t || RESTworldListViewComponent)(i0.ɵɵdirectiveInject(i1.RESTworldClientCollection), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.AvatarGenerator));\n};\n\nRESTworldListViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RESTworldListViewComponent,\n  selectors: [[\"rw-list\"]],\n  inputs: {\n    editLink: \"editLink\",\n    apiName: \"apiName\",\n    rel: \"rel\",\n    rowsPerPage: \"rowsPerPage\"\n  },\n  decls: 6,\n  vars: 10,\n  consts: [[\"responsiveLayout\", \"scroll\", 3, \"value\", \"lazy\", \"lazyLoadOnInit\", \"paginator\", \"rows\", \"rowsPerPageOptions\", \"totalRecords\", \"loading\", \"showInitialSortBadge\", \"columns\", \"onLazyLoad\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [3, \"pSortableColumn\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"justify-content-end\"], [\"pTooltip\", \"Create new\", \"tooltipPosition\", \"left\", 1, \"mx-2\"], [\"icon\", \"fas fa-plus\", \"pButton\", \"\", 1, \"p-button-success\", 3, \"routerLink\"], [3, \"pSortableColumn\"], [1, \"p-d-flex\", \"p-jc-between\", \"p-ai-center\"], [3, \"field\"], [\"display\", \"menu\", 3, \"type\", \"field\"], [3, \"ngSwitch\", 4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"pTooltip\", \"View/Edit\", \"tooltipPosition\", \"left\", \"icon\", \"fas fa-edit\", 3, \"routerLink\"], [\"pTooltip\", \"Delete\", \"tooltipPosition\", \"left\", \"pButton\", \"\", \"icon\", \"fas fa-trash-alt\", \"type\", \"button\", \"class\", \"mx-2 p-button-danger\", 3, \"click\", 4, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"flex justify-content-end\", 4, \"ngSwitchCase\"], [\"class\", \"flex justify-content-center\", 4, \"ngSwitchCase\"], [3, \"pTooltip\", 4, \"ngSwitchCase\"], [\"tooltipPosition\", \"top\", \"shape\", \"circle\", 3, \"pTooltip\", \"image\", \"label\", \"style\", 4, \"ngIf\"], [4, \"ngIf\"], [\"tooltipPosition\", \"top\", \"shape\", \"circle\", 3, \"pTooltip\", \"image\", \"label\"], [1, \"flex\", \"justify-content-center\"], [3, \"ngModel\", \"readonly\", \"ngModelChange\"], [3, \"pTooltip\"], [\"pTooltip\", \"Delete\", \"tooltipPosition\", \"left\", \"pButton\", \"\", \"icon\", \"fas fa-trash-alt\", \"type\", \"button\", 1, \"mx-2\", \"p-button-danger\", 3, \"click\"], [\"colspan\", \"8\"]],\n  template: function RESTworldListViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p-table\", 0);\n      i0.ɵɵlistener(\"onLazyLoad\", function RESTworldListViewComponent_Template_p_table_onLazyLoad_0_listener($event) {\n        return ctx.load($event);\n      });\n      i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_1_Template, 6, 5, \"ng-template\", 1);\n      i0.ɵɵtemplate(2, RESTworldListViewComponent_ng_template_2_Template, 6, 7, \"ng-template\", 2);\n      i0.ɵɵtemplate(3, RESTworldListViewComponent_ng_template_3_Template, 3, 0, \"ng-template\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"p-toast\")(5, \"p-confirmDialog\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"value\", ctx.value)(\"lazy\", true)(\"lazyLoadOnInit\", false)(\"paginator\", true)(\"rows\", ctx.rows)(\"rowsPerPageOptions\", ctx.rowsPerPage)(\"totalRecords\", ctx.totalRecords)(\"loading\", ctx.isLoading)(\"showInitialSortBadge\", true)(\"columns\", ctx.columns);\n    }\n  },\n  directives: [i4.Table, i2.PrimeTemplate, i5.NgForOf, i4.SortableColumn, i4.SortIcon, i4.ColumnFilter, i6.Tooltip, i7.RouterLinkWithHref, i8.ButtonDirective, i5.NgSwitch, i5.NgSwitchCase, i5.NgIf, i9.Avatar, i10.TriStateCheckbox, i11.NgControlStatus, i11.NgModel, i12.Toast, i13.ConfirmDialog],\n  pipes: [i5.DatePipe],\n  styles: [\".p-tooltip[_ngcontent-%COMP%] {\\n  max-width: fit-content;\\n}\\n\\na.p-button[_ngcontent-%COMP%] {\\n    text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3R3b3JsZC1saXN0LXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJyZXN0d29ybGQtbGlzdC12aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucC10b29sdGlwIHtcbiAgbWF4LXdpZHRoOiBmaXQtY29udGVudDtcbn1cblxuYS5wLWJ1dHRvbiB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuIl19 */\"]\n});","map":{"version":3,"sources":["C:/Repos/wertzui/RESTworld/src/Example/ExampleBlog/ExampleBlog.Client.Angular/ClientApp/src/app/ngx-restworld-client/views/restworld-list-view/restworld-list-view.component.ts"],"names":["_","ConfirmationService","FilterMatchMode","MessageService","RESTworldClientCollection","ProblemDetails","AvatarGenerator","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","i11","i12","i13","RESTworldListViewComponent_ng_template_1_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","col_r5","$implicit","ɵɵproperty","field","ɵɵadvance","ɵɵtextInterpolate1","header","type","_c0","a1","a2","RESTworldListViewComponent_ng_template_1_Template","ɵɵtemplate","columns_r3","ctx_r0","ɵɵnextContext","ɵɵpureFunction2","apiName","newHref","RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_p_avatar_1_Template","col_r10","entity_r6","ctx_r15","ɵɵstyleMap","avatarGenerator","getStyle","getImage","getLabel","RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_span_2_Template","ɵɵtextInterpolate","RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","RESTworldListViewComponent_ng_template_2_td_1_span_2_Template","RESTworldListViewComponent_ng_template_2_td_1_span_3_Template","_r26","ɵɵgetCurrentView","ɵɵlistener","RESTworldListViewComponent_ng_template_2_td_1_span_3_Template_p_triStateCheckbox_ngModelChange_1_listener","$event","ɵɵrestoreView","RESTworldListViewComponent_ng_template_2_td_1_span_4_Template","ɵɵpipe","ctx_r14","ɵɵpipeBind2","dateFormat","RESTworldListViewComponent_ng_template_2_td_1_Template","RESTworldListViewComponent_ng_template_2_button_5_Template","_r34","RESTworldListViewComponent_ng_template_2_button_5_Template_button_click_0_listener","ctx_r32","showDeleteConfirmatioModal","_c1","a0","RESTworldListViewComponent_ng_template_2_Template","columns_r7","columns","ctx_r1","ɵɵpureFunction3","editLink","_links","self","href","delete","RESTworldListViewComponent_ng_template_3_Template","ColumnType","RESTworldListViewComponent","constructor","_clients","_confirmationService","_messageService","_columns","_editLink","isLoading","_totalRecords","rowsPerPage","_lastEvent","rows","value","_apiName","rel","load","_rel","resource","_embedded","items","totalRecords","sortOrder","findLink","_dateFormat","getClient","Error","event","parameters","createParametersFromEvent","response","getList","ok","isProblemDetails","body","add","severity","summary","detail","data","totalPages","$top","undefined","createColumns","confirm","message","icon","accept","length","rowsWithProperties","map","Object","entries","filter","p","distinctProperties","propertiesOfRow","property","propertyName","propertyValue","alreadyFoundPropertyWithSameName","find","push","withoutChangeTrackingProperties","hasChangeTrackingProperties","sortedProperties","Date","toTitleCase","getColumnType","text","isNumber","numeric","isDate","date","isString","isBoolean","boolean","anyCase","replace","match","toUpperCase","oDataParameters","$filter","createFilterFromEvent","$orderby","createOrderByFromEvent","createTopFromEvent","$skip","createSkipFromEvent","first","sortField","order","filters","f","createFilterForPropertyArray","join","createFilterForProperty","operator","oDataOperator","createODataOperator","matchMode","comparisonValue","createComparisonValue","STARTS_WITH","CONTAINS","NOT_CONTAINS","ENDS_WITH","EQUALS","NOT_EQUALS","IN","LESS_THAN","LESS_THAN_OR_EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","IS","IS_NOT","BEFORE","AFTER","DATE_AFTER","DATE_BEFORE","DATE_IS","DATE_IS_NOT","c","toISOString","toLocaleDateString","ɵfac","RESTworldListViewComponent_Factory","t","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","inputs","decls","vars","consts","template","RESTworldListViewComponent_Template","RESTworldListViewComponent_Template_p_table_onLazyLoad_0_listener","directives","Table","PrimeTemplate","NgForOf","SortableColumn","SortIcon","ColumnFilter","Tooltip","RouterLinkWithHref","ButtonDirective","NgSwitch","NgSwitchCase","NgIf","Avatar","TriStateCheckbox","NgControlStatus","NgModel","Toast","ConfirmDialog","pipes","DatePipe","styles"],"mappings":"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","sourcesContent":["import * as _ from 'lodash';\r\nimport { ConfirmationService, FilterMatchMode, MessageService } from 'primeng/api';\r\nimport { RESTworldClientCollection } from '../../services/restworld-client-collection';\r\nimport { ProblemDetails } from '../../models/problem-details';\r\nimport { AvatarGenerator } from '../../services/avatar-generator';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../../services/restworld-client-collection\";\r\nimport * as i2 from \"primeng/api\";\r\nimport * as i3 from \"../../services/avatar-generator\";\r\nimport * as i4 from \"primeng/table\";\r\nimport * as i5 from \"@angular/common\";\r\nimport * as i6 from \"primeng/tooltip\";\r\nimport * as i7 from \"@angular/router\";\r\nimport * as i8 from \"primeng/button\";\r\nimport * as i9 from \"primeng/avatar\";\r\nimport * as i10 from \"primeng/tristatecheckbox\";\r\nimport * as i11 from \"@angular/forms\";\r\nimport * as i12 from \"primeng/toast\";\r\nimport * as i13 from \"primeng/confirmdialog\";\r\nfunction RESTworldListViewComponent_ng_template_1_th_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"th\", 8)(1, \"div\", 9);\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelement(3, \"p-sortIcon\", 10)(4, \"p-columnFilter\", 11);\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const col_r5 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"pSortableColumn\", col_r5.field);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate1(\" \", col_r5.header, \" \");\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"field\", col_r5.field);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"type\", col_r5.type)(\"field\", col_r5.field);\r\n} }\r\nconst _c0 = function (a1, a2) { return [\"/edit\", a1, a2]; };\r\nfunction RESTworldListViewComponent_ng_template_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\");\r\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_1_th_1_Template, 5, 5, \"th\", 4);\r\n    i0.ɵɵelementStart(2, \"th\")(3, \"div\", 5)(4, \"div\", 6);\r\n    i0.ɵɵelement(5, \"a\", 7);\r\n    i0.ɵɵelementEnd()()()();\r\n} if (rf & 2) {\r\n    const columns_r3 = ctx.$implicit;\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", columns_r3);\r\n    i0.ɵɵadvance(4);\r\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction2(2, _c0, ctx_r0.apiName, ctx_r0.newHref));\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_p_avatar_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"p-avatar\", 22);\r\n} if (rf & 2) {\r\n    const col_r10 = i0.ɵɵnextContext(2).$implicit;\r\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r15 = i0.ɵɵnextContext();\r\n    i0.ɵɵstyleMap(ctx_r15.avatarGenerator.getStyle(entity_r6[col_r10.field]));\r\n    i0.ɵɵproperty(\"pTooltip\", entity_r6[col_r10.field])(\"image\", ctx_r15.avatarGenerator.getImage(entity_r6[col_r10.field]))(\"label\", ctx_r15.avatarGenerator.getLabel(entity_r6[col_r10.field]));\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_span_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const col_r10 = i0.ɵɵnextContext(2).$implicit;\r\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(entity_r6[col_r10.field]);\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_p_avatar_1_Template, 1, 5, \"p-avatar\", 20);\r\n    i0.ɵɵtemplate(2, RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_span_2_Template, 2, 1, \"span\", 21);\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const col_r10 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", col_r10.field === \"createdBy\" || col_r10.field === \"lastChangedBy\");\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", col_r10.field !== \"createdBy\" && col_r10.field !== \"lastChangedBy\");\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_span_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 5);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const col_r10 = i0.ɵɵnextContext().$implicit;\r\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(entity_r6[col_r10.field]);\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_span_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r26 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"span\", 23)(1, \"p-triStateCheckbox\", 24);\r\n    i0.ɵɵlistener(\"ngModelChange\", function RESTworldListViewComponent_ng_template_2_td_1_span_3_Template_p_triStateCheckbox_ngModelChange_1_listener($event) { i0.ɵɵrestoreView(_r26); const col_r10 = i0.ɵɵnextContext().$implicit; const entity_r6 = i0.ɵɵnextContext().$implicit; return (entity_r6[col_r10.field] = $event); });\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const col_r10 = i0.ɵɵnextContext().$implicit;\r\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngModel\", entity_r6[col_r10.field])(\"readonly\", true);\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_span_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"span\", 25);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵpipe(2, \"date\");\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const col_r10 = i0.ɵɵnextContext().$implicit;\r\n    const entity_r6 = i0.ɵɵnextContext().$implicit;\r\n    const ctx_r14 = i0.ɵɵnextContext();\r\n    i0.ɵɵproperty(\"pTooltip\", entity_r6[col_r10.field]);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 2, entity_r6[col_r10.field], ctx_r14.dateFormat));\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_td_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"td\", 15);\r\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_2_td_1_ng_container_1_Template, 3, 2, \"ng-container\", 16);\r\n    i0.ɵɵtemplate(2, RESTworldListViewComponent_ng_template_2_td_1_span_2_Template, 2, 1, \"span\", 17);\r\n    i0.ɵɵtemplate(3, RESTworldListViewComponent_ng_template_2_td_1_span_3_Template, 2, 2, \"span\", 18);\r\n    i0.ɵɵtemplate(4, RESTworldListViewComponent_ng_template_2_td_1_span_4_Template, 3, 5, \"span\", 19);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const col_r10 = ctx.$implicit;\r\n    i0.ɵɵproperty(\"ngSwitch\", col_r10.type);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngSwitchCase\", \"text\");\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngSwitchCase\", \"numeric\");\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngSwitchCase\", \"boolean\");\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_2_button_5_Template(rf, ctx) { if (rf & 1) {\r\n    const _r34 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 26);\r\n    i0.ɵɵlistener(\"click\", function RESTworldListViewComponent_ng_template_2_button_5_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r34); const entity_r6 = i0.ɵɵnextContext().$implicit; const ctx_r32 = i0.ɵɵnextContext(); return ctx_r32.showDeleteConfirmatioModal(entity_r6); });\r\n    i0.ɵɵelementEnd();\r\n} }\r\nconst _c1 = function (a0, a1, a2) { return [a0, a1, a2]; };\r\nfunction RESTworldListViewComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\");\r\n    i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_2_td_1_Template, 5, 5, \"td\", 12);\r\n    i0.ɵɵelementStart(2, \"td\")(3, \"div\", 5);\r\n    i0.ɵɵelement(4, \"a\", 13);\r\n    i0.ɵɵtemplate(5, RESTworldListViewComponent_ng_template_2_button_5_Template, 1, 0, \"button\", 14);\r\n    i0.ɵɵelementEnd()()();\r\n} if (rf & 2) {\r\n    const entity_r6 = ctx.$implicit;\r\n    const columns_r7 = ctx.columns;\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", columns_r7);\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction3(3, _c1, ctx_r1.editLink, ctx_r1.apiName, entity_r6._links == null ? null : entity_r6._links.self[0].href));\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", entity_r6._links.delete);\r\n} }\r\nfunction RESTworldListViewComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 27);\r\n    i0.ɵɵtext(2, \"No entries found.\");\r\n    i0.ɵɵelementEnd()();\r\n} }\r\nexport var ColumnType;\r\n(function (ColumnType) {\r\n    ColumnType[\"text\"] = \"text\";\r\n    ColumnType[\"numeric\"] = \"numeric\";\r\n    ColumnType[\"boolean\"] = \"boolean\";\r\n    ColumnType[\"date\"] = \"date\";\r\n})(ColumnType || (ColumnType = {}));\r\nexport class RESTworldListViewComponent {\r\n    constructor(_clients, _confirmationService, _messageService, avatarGenerator) {\r\n        this._clients = _clients;\r\n        this._confirmationService = _confirmationService;\r\n        this._messageService = _messageService;\r\n        this.avatarGenerator = avatarGenerator;\r\n        this._columns = [];\r\n        this._editLink = '/edit';\r\n        this.isLoading = false;\r\n        this._totalRecords = 0;\r\n        this.rowsPerPage = [10, 25, 50];\r\n        this._lastEvent = {\r\n            rows: this.rowsPerPage[0]\r\n        };\r\n    }\r\n    get columns() {\r\n        return this._columns;\r\n    }\r\n    set editLink(value) {\r\n        if (value)\r\n            this._editLink = value;\r\n    }\r\n    get editLink() {\r\n        return this._editLink;\r\n    }\r\n    set apiName(value) {\r\n        this._apiName = value;\r\n        if (this.apiName && this.rel && this._lastEvent)\r\n            this.load(this._lastEvent);\r\n    }\r\n    get apiName() {\r\n        return this._apiName;\r\n    }\r\n    set rel(value) {\r\n        this._rel = value;\r\n        if (this.apiName && this.rel && this._lastEvent)\r\n            this.load(this._lastEvent);\r\n    }\r\n    get rel() {\r\n        return this._rel;\r\n    }\r\n    get value() {\r\n        return this.resource?._embedded?.items || [];\r\n    }\r\n    get rows() {\r\n        return this._lastEvent?.rows || 0;\r\n    }\r\n    get totalRecords() {\r\n        return this._totalRecords;\r\n    }\r\n    set totalRecords(value) {\r\n        this._totalRecords = value || 0;\r\n    }\r\n    get sortOrder() {\r\n        return this._lastEvent.sortOrder || 0;\r\n    }\r\n    get newHref() {\r\n        return this.resource?.findLink('new')?.href;\r\n    }\r\n    get dateFormat() {\r\n        return RESTworldListViewComponent._dateFormat;\r\n    }\r\n    getClient() {\r\n        if (!this.apiName)\r\n            throw new Error('Cannot get a client, because the apiName is not set.');\r\n        return this._clients.getClient(this.apiName);\r\n    }\r\n    async load(event) {\r\n        if (!this.apiName || !this.rel)\r\n            return;\r\n        this.isLoading = true;\r\n        this._lastEvent = event;\r\n        const parameters = this.createParametersFromEvent(event);\r\n        const response = await this.getClient().getList(this.rel, parameters);\r\n        if (!response.ok || ProblemDetails.isProblemDetails(response.body) || !response.body) {\r\n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'Error while loading the resources from the API.', data: response });\r\n        }\r\n        else if (response.body) {\r\n            this.resource = response.body;\r\n            this.totalRecords = this.resource.totalPages && parameters.$top ? this.resource.totalPages * parameters.$top : undefined;\r\n            this._columns = this.createColumns();\r\n        }\r\n        this.isLoading = false;\r\n    }\r\n    showDeleteConfirmatioModal(resource) {\r\n        this._confirmationService.confirm({\r\n            message: 'Do you really want to delete this resource?',\r\n            header: 'Confirm delete',\r\n            icon: 'far fa-trash-alt',\r\n            accept: () => this.delete(resource)\r\n        });\r\n    }\r\n    async delete(resource) {\r\n        if (!this.apiName || !this.rel)\r\n            return;\r\n        await this.getClient().delete(resource);\r\n        this._messageService.add({ severity: 'success', summary: 'Deleted', detail: 'The resource has been deleted.' });\r\n        this.load(this._lastEvent);\r\n    }\r\n    createColumns() {\r\n        if (this.value.length === 0)\r\n            return this.columns;\r\n        // Get all distinct properties from all rows\r\n        // We look at all rows to eliminate possible undefined values\r\n        const rowsWithProperties = this.value\r\n            .map(resource => Object.entries(resource)\r\n            .filter(p => p[0] !== '_links' &&\r\n            p[0] !== '_embedded' &&\r\n            p[0] !== 'id' &&\r\n            p[0] !== 'timestamp'));\r\n        const distinctProperties = rowsWithProperties[0];\r\n        for (const propertiesOfRow of rowsWithProperties) {\r\n            for (const property of propertiesOfRow) {\r\n                const propertyName = property[0];\r\n                const propertyValue = property[1];\r\n                const alreadyFoundPropertyWithSameName = distinctProperties.find(p => p[0] === propertyName);\r\n                if (!alreadyFoundPropertyWithSameName) // Add new property\r\n                    distinctProperties.push(property);\r\n                else if (!alreadyFoundPropertyWithSameName[1] && propertyValue) // Use defined value instead of existing undefined value\r\n                    alreadyFoundPropertyWithSameName[1] = propertyValue;\r\n            }\r\n        }\r\n        // Check if the rows are entities with change tracking\r\n        const withoutChangeTrackingProperties = distinctProperties.filter(p => p[0] !== 'createdAt' &&\r\n            p[0] !== 'createdBy' &&\r\n            p[0] !== 'lastChangedAt' &&\r\n            p[0] !== 'lastChangedBy');\r\n        const hasChangeTrackingProperties = withoutChangeTrackingProperties.length < distinctProperties.length;\r\n        // First the id, then all other properties\r\n        const sortedProperties = [\r\n            ['id', 0],\r\n            ...withoutChangeTrackingProperties\r\n        ];\r\n        // And change tracking properties at the end\r\n        if (hasChangeTrackingProperties) {\r\n            sortedProperties.push(['createdAt', new Date()]);\r\n            sortedProperties.push(['createdBy', '']);\r\n            sortedProperties.push(['lastChangedAt', new Date()]);\r\n            sortedProperties.push(['lastChangedBy', '']);\r\n        }\r\n        const columns = sortedProperties\r\n            .map(p => ({\r\n            header: RESTworldListViewComponent.toTitleCase(p[0]),\r\n            field: p[0],\r\n            type: RESTworldListViewComponent.getColumnType(p[1]),\r\n        }));\r\n        return columns;\r\n    }\r\n    static getColumnType(value) {\r\n        if (value === null || value === undefined)\r\n            return ColumnType.text;\r\n        if (_.isNumber(value))\r\n            return ColumnType.numeric;\r\n        if (_.isDate(value))\r\n            return ColumnType.date;\r\n        if (_.isString(value))\r\n            return ColumnType.text;\r\n        if (_.isBoolean(value))\r\n            return ColumnType.boolean;\r\n        return ColumnType.text;\r\n    }\r\n    static toTitleCase(anyCase) {\r\n        return anyCase\r\n            .replace(/(_)+/g, ' ') // underscore to whitespace\r\n            .replace(/([a-z])([A-Z][a-z])/g, \"$1 $2\") // insert space before each new word if there is none\r\n            .replace(/([A-Z][a-z])([A-Z])/g, \"$1 $2\") // insert space after each word if there is none\r\n            .replace(/([a-z])([A-Z]+[a-z])/g, \"$1 $2\") // insert space after single letter word if there is none\r\n            .replace(/([A-Z]+)([A-Z][a-z][a-z])/g, \"$1 $2\") // insert space before single letter word if there is none\r\n            .replace(/([a-z]+)([A-Z0-9]+)/g, \"$1 $2\") // insert space after numbers\r\n            .replace(/^./, (match) => match.toUpperCase()); // change first letter to be upper case\r\n    }\r\n    createParametersFromEvent(event) {\r\n        const oDataParameters = {\r\n            $filter: this.createFilterFromEvent(event),\r\n            $orderby: RESTworldListViewComponent.createOrderByFromEvent(event),\r\n            $top: RESTworldListViewComponent.createTopFromEvent(event),\r\n            $skip: RESTworldListViewComponent.createSkipFromEvent(event)\r\n        };\r\n        return oDataParameters;\r\n    }\r\n    static createSkipFromEvent(event) {\r\n        return event.first;\r\n    }\r\n    static createTopFromEvent(event) {\r\n        return event.rows;\r\n    }\r\n    static createOrderByFromEvent(event) {\r\n        if (event.sortField) {\r\n            const order = !event.sortOrder || event.sortOrder > 0 ? 'asc' : 'desc';\r\n            return `${event.sortField} ${order}`;\r\n        }\r\n        return undefined;\r\n    }\r\n    createFilterFromEvent(event) {\r\n        if (!event.filters)\r\n            return undefined;\r\n        const filter = Object.entries(event.filters)\r\n            // The type definition is wrong, event.filters has values of type FilterMetadata[] and not FilterMetadata.\r\n            .map(([property, filter]) => ({ property: property, filters: filter }))\r\n            .map(f => this.createFilterForPropertyArray(f.property, f.filters))\r\n            .filter(f => !!f)\r\n            .join(' and ');\r\n        if (filter === '')\r\n            return undefined;\r\n        return `(${filter})`;\r\n    }\r\n    createFilterForPropertyArray(property, filters) {\r\n        const filter = filters\r\n            .map(f => this.createFilterForProperty(property, f))\r\n            .filter(f => !!f)\r\n            .join(` ${filters[0].operator} `);\r\n        if (filter === '')\r\n            return undefined;\r\n        return `(${filter})`;\r\n    }\r\n    createFilterForProperty(property, filter) {\r\n        if (!filter.value)\r\n            return undefined;\r\n        const oDataOperator = RESTworldListViewComponent.createODataOperator(filter.matchMode);\r\n        const comparisonValue = this.createComparisonValue(property, filter.value);\r\n        switch (oDataOperator) {\r\n            case 'contains':\r\n            case 'not contains':\r\n            case 'startswith':\r\n            case 'endswith':\r\n                return `${oDataOperator}(${property}, ${comparisonValue})`;\r\n            default:\r\n                return `${property} ${oDataOperator} ${comparisonValue}`;\r\n        }\r\n    }\r\n    static createODataOperator(matchMode) {\r\n        switch (matchMode) {\r\n            case FilterMatchMode.STARTS_WITH:\r\n                return 'startswith';\r\n            case FilterMatchMode.CONTAINS:\r\n                return 'contains';\r\n            case FilterMatchMode.NOT_CONTAINS:\r\n                return 'not contains';\r\n            case FilterMatchMode.ENDS_WITH:\r\n                return 'endswith';\r\n            case FilterMatchMode.EQUALS:\r\n                return 'eq';\r\n            case FilterMatchMode.NOT_EQUALS:\r\n                return 'ne';\r\n            case FilterMatchMode.IN:\r\n                return 'in';\r\n            case FilterMatchMode.LESS_THAN:\r\n                return 'lt';\r\n            case FilterMatchMode.LESS_THAN_OR_EQUAL_TO:\r\n                return 'le';\r\n            case FilterMatchMode.GREATER_THAN:\r\n                return 'gt';\r\n            case FilterMatchMode.GREATER_THAN_OR_EQUAL_TO:\r\n                return 'ge';\r\n            case FilterMatchMode.IS:\r\n                return 'eq';\r\n            case FilterMatchMode.IS_NOT:\r\n                return 'ne';\r\n            case FilterMatchMode.BEFORE:\r\n                return 'lt';\r\n            case FilterMatchMode.AFTER:\r\n                return 'gt';\r\n            case FilterMatchMode.DATE_AFTER:\r\n                return 'ge';\r\n            case FilterMatchMode.DATE_BEFORE:\r\n                return 'lt';\r\n            case FilterMatchMode.DATE_IS:\r\n                return 'eq';\r\n            case FilterMatchMode.DATE_IS_NOT:\r\n                return 'ne';\r\n            default:\r\n                throw Error(`Unknown matchMode ${matchMode}`);\r\n        }\r\n    }\r\n    createComparisonValue(property, value) {\r\n        if (value === null || value === undefined)\r\n            return 'null';\r\n        const columns = this.columns.filter(c => c.field === property);\r\n        if (columns.length !== 1)\r\n            throw new Error(`Cannot find the column for the property ${property} which is specified in the filter.`);\r\n        const type = columns[0].type;\r\n        switch (type) {\r\n            case ColumnType.boolean:\r\n                return `${value}`;\r\n            case ColumnType.date:\r\n                return `cast(${value.toISOString()}, Edm.DateTimeOffset)`;\r\n            case ColumnType.numeric:\r\n                return `${value}`;\r\n            case ColumnType.text:\r\n                return `'${value}'`;\r\n            default:\r\n                throw new Error(`Unknown column type '${type}'`);\r\n        }\r\n    }\r\n}\r\nRESTworldListViewComponent._dateFormat = new Date(3333, 10, 22)\r\n    .toLocaleDateString()\r\n    .replace(\"22\", \"dd\")\r\n    .replace(\"11\", \"MM\")\r\n    .replace(\"3333\", \"y\")\r\n    .replace(\"33\", \"yy\");\r\nRESTworldListViewComponent.ɵfac = function RESTworldListViewComponent_Factory(t) { return new (t || RESTworldListViewComponent)(i0.ɵɵdirectiveInject(i1.RESTworldClientCollection), i0.ɵɵdirectiveInject(i2.ConfirmationService), i0.ɵɵdirectiveInject(i2.MessageService), i0.ɵɵdirectiveInject(i3.AvatarGenerator)); };\r\nRESTworldListViewComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RESTworldListViewComponent, selectors: [[\"rw-list\"]], inputs: { editLink: \"editLink\", apiName: \"apiName\", rel: \"rel\", rowsPerPage: \"rowsPerPage\" }, decls: 6, vars: 10, consts: [[\"responsiveLayout\", \"scroll\", 3, \"value\", \"lazy\", \"lazyLoadOnInit\", \"paginator\", \"rows\", \"rowsPerPageOptions\", \"totalRecords\", \"loading\", \"showInitialSortBadge\", \"columns\", \"onLazyLoad\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pTemplate\", \"emptymessage\"], [3, \"pSortableColumn\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"justify-content-end\"], [\"pTooltip\", \"Create new\", \"tooltipPosition\", \"left\", 1, \"mx-2\"], [\"icon\", \"fas fa-plus\", \"pButton\", \"\", 1, \"p-button-success\", 3, \"routerLink\"], [3, \"pSortableColumn\"], [1, \"p-d-flex\", \"p-jc-between\", \"p-ai-center\"], [3, \"field\"], [\"display\", \"menu\", 3, \"type\", \"field\"], [3, \"ngSwitch\", 4, \"ngFor\", \"ngForOf\"], [\"pButton\", \"\", \"pTooltip\", \"View/Edit\", \"tooltipPosition\", \"left\", \"icon\", \"fas fa-edit\", 3, \"routerLink\"], [\"pTooltip\", \"Delete\", \"tooltipPosition\", \"left\", \"pButton\", \"\", \"icon\", \"fas fa-trash-alt\", \"type\", \"button\", \"class\", \"mx-2 p-button-danger\", 3, \"click\", 4, \"ngIf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"flex justify-content-end\", 4, \"ngSwitchCase\"], [\"class\", \"flex justify-content-center\", 4, \"ngSwitchCase\"], [3, \"pTooltip\", 4, \"ngSwitchCase\"], [\"tooltipPosition\", \"top\", \"shape\", \"circle\", 3, \"pTooltip\", \"image\", \"label\", \"style\", 4, \"ngIf\"], [4, \"ngIf\"], [\"tooltipPosition\", \"top\", \"shape\", \"circle\", 3, \"pTooltip\", \"image\", \"label\"], [1, \"flex\", \"justify-content-center\"], [3, \"ngModel\", \"readonly\", \"ngModelChange\"], [3, \"pTooltip\"], [\"pTooltip\", \"Delete\", \"tooltipPosition\", \"left\", \"pButton\", \"\", \"icon\", \"fas fa-trash-alt\", \"type\", \"button\", 1, \"mx-2\", \"p-button-danger\", 3, \"click\"], [\"colspan\", \"8\"]], template: function RESTworldListViewComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"p-table\", 0);\r\n        i0.ɵɵlistener(\"onLazyLoad\", function RESTworldListViewComponent_Template_p_table_onLazyLoad_0_listener($event) { return ctx.load($event); });\r\n        i0.ɵɵtemplate(1, RESTworldListViewComponent_ng_template_1_Template, 6, 5, \"ng-template\", 1);\r\n        i0.ɵɵtemplate(2, RESTworldListViewComponent_ng_template_2_Template, 6, 7, \"ng-template\", 2);\r\n        i0.ɵɵtemplate(3, RESTworldListViewComponent_ng_template_3_Template, 3, 0, \"ng-template\", 3);\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(4, \"p-toast\")(5, \"p-confirmDialog\");\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"value\", ctx.value)(\"lazy\", true)(\"lazyLoadOnInit\", false)(\"paginator\", true)(\"rows\", ctx.rows)(\"rowsPerPageOptions\", ctx.rowsPerPage)(\"totalRecords\", ctx.totalRecords)(\"loading\", ctx.isLoading)(\"showInitialSortBadge\", true)(\"columns\", ctx.columns);\r\n    } }, directives: [i4.Table, i2.PrimeTemplate, i5.NgForOf, i4.SortableColumn, i4.SortIcon, i4.ColumnFilter, i6.Tooltip, i7.RouterLinkWithHref, i8.ButtonDirective, i5.NgSwitch, i5.NgSwitchCase, i5.NgIf, i9.Avatar, i10.TriStateCheckbox, i11.NgControlStatus, i11.NgModel, i12.Toast, i13.ConfirmDialog], pipes: [i5.DatePipe], styles: [\".p-tooltip[_ngcontent-%COMP%] {\\n  max-width: fit-content;\\n}\\n\\na.p-button[_ngcontent-%COMP%] {\\n    text-decoration: none;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3R3b3JsZC1saXN0LXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtJQUNJLHFCQUFxQjtBQUN6QiIsImZpbGUiOiJyZXN0d29ybGQtbGlzdC12aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucC10b29sdGlwIHtcbiAgbWF4LXdpZHRoOiBmaXQtY29udGVudDtcbn1cblxuYS5wLWJ1dHRvbiB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuIl19 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}